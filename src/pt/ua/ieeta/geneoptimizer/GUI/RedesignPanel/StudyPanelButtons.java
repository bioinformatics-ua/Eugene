/*
 * StudyPanelButtons.java
 */

/*
 * StudyPanelButtons.java
 *
 * Created on 19/Fev/2010, 18:28:20
 */
package pt.ua.ieeta.geneoptimizer.GUI.RedesignPanel;

import java.awt.Color;
import java.util.Collection;
import javax.swing.JOptionPane;
import pt.ua.ieeta.geneoptimizer.GUI.MainWindow;
import pt.ua.ieeta.geneoptimizer.GUI.StudyLoadFrame;
import pt.ua.ieeta.geneoptimizer.GUI.StudySaveFrame;
import pt.ua.ieeta.geneoptimizer.GeneRedesign.OptimizationModel;
import pt.ua.ieeta.geneoptimizer.Main.ProjectManager;

/**
 *
 * @author Paulo
 */
public class StudyPanelButtons extends javax.swing.JPanel {

    /** Creates new form StudyPanelButtons */
    public StudyPanelButtons()
    {
        initComponents();
        enableAllButtons(false);
        setRedesignButtonToStop(true);
        setRedesignButtonToStop(false);
        //applyStudyButton.setIcon(new ImageIcon(getClass().getResource("/pt/ua/geneoptimizer/resources/play.png")));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        makeAnalysisButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        isFastCheckBox = new javax.swing.JCheckBox();
        applyStudyButton = new javax.swing.JButton();

        jPanel1.setMaximumSize(new java.awt.Dimension(261, 110));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        makeAnalysisButton.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        makeAnalysisButton.setText("Gene Diagnosis");
        makeAnalysisButton.setEnabled(false);
        makeAnalysisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeAnalysisButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 2, 2);
        jPanel1.add(makeAnalysisButton, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jButton2.setText("<html><center><b>Save</b> Redesign <br/>Protocol</center></html>");
        jButton2.setAlignmentX(0.5F);
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel1.add(jButton2, gridBagConstraints);

        jButton3.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        jButton3.setText("<html><center><b>Load</b> Redesign<br/>Protocol</center></html>");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel1.add(jButton3, gridBagConstraints);

        isFastCheckBox.setSelected(true);
        isFastCheckBox.setText("Fast");
        isFastCheckBox.setToolTipText("<html>This is much quicker than normal redesign process (as it doesn't use genetic algorithms) but is unable to return pareto front solutions (only a single solution is given).</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        jPanel1.add(isFastCheckBox, gridBagConstraints);

        applyStudyButton.setText("<html><center><b>Redesign<br/>Gene</b></center></html>");
        applyStudyButton.setToolTipText("<html>Applies the selected redesign methods to the selected gene. <br/>This uses a genetic algorithm (or simulated annealing) to find the global optimum and several pareto front solution (in the case of the genetic algorithm). <br/>Therefore, it might take a few minutes, depending on the length of the gene.</html>");
        applyStudyButton.setEnabled(false);
        applyStudyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redesignGeneButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 1, 0);
        jPanel1.add(applyStudyButton, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    /** Called when the user presses the "Redesign gene" or "STOP!" button. */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       StudySaveFrame newStudySaveFrame = StudySaveFrame.getInstance();
       newStudySaveFrame.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void makeAnalysisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeAnalysisButtonActionPerformed
        OptimizationModel.getInstance().makeAnalysis();
    }//GEN-LAST:event_makeAnalysisButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       StudyLoadFrame studyLoadFrame = StudyLoadFrame.getInstance();
       studyLoadFrame.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed
/*
    private void redesignGeneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redesignGeneButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_redesignGeneButtonActionPerformed
*/

    public void enableDisableRedesignButton(boolean isEnabled) {
        applyStudyButton.setEnabled(isEnabled);
    }

    /* Verify all conditions to make the button on this panel enabled or disabled. */
    public void enableDisableButtons() {
        StudyMakerPanel studyMakerPanel = StudyMakerPanel.getInstance();
        Collection<AccordionHeader> pluginsList = studyMakerPanel.getAccordionHeaderList();

        /* Is there a project and a selected study? */
        boolean noGenePanel = false;
        if (ProjectManager.getInstance().getSelectedProject() == null) {
            noGenePanel = true;
        }
        if (ProjectManager.getInstance().getSelectedProject().getSelectedStudy() == null) {
            noGenePanel = true;
        }

        if ((pluginsList == null) || noGenePanel) {
            enableAllButtons(false);
            return;
        }

        for (AccordionHeader ah : pluginsList) {
            if (ah.isSelected()) {
                enableAllButtons(true);
                return;
            }
        }
        if (noGenePanel == true) {
            enableAllButtons(false);
        } else {
            jButton3.setEnabled(true);
            jButton3.setForeground(Color.BLACK);
        }
    }

    /**
     * Called when the user presses the "Redesign gene" or "STOP!" button.
     */
    private void redesignGeneButtonActionPerformed(java.awt.event.ActionEvent evt) {

        /* If there isn't an optimization running, create a new one. Else stop the running optimization. */
        if (!OptimizationModel.getInstance().isRunning()) {
            OptimizationModel.getInstance().applyOptimizationPlugins(isFastCheckBox.isSelected());
            enableAllButtons(false);
            applyStudyButton.setEnabled(true);
            setRedesignButtonToStop(true);
            applyStudyButton.setForeground(Color.black);
        } else {
            Object[] options = {"Yes, give me the best solutions so far", "No, wait until it finishes"};
            int option = JOptionPane.showOptionDialog(MainWindow.getInstance(), "Are you sure you want to interrupt the optimization?\nThe optimization ends by itself when it finds the best gene for your conditions.",
                    "Stop Optimization?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);

            if (option != 0) {
                return;
            }

            setRedesignButtonToStop(false);
            enableAllButtons(false);
            OptimizationModel.getInstance().stopOptimization();
        }
    }

    public void enableAllButtons(boolean isEnable) {
        Color color = isEnable ? Color.BLACK : new Color(131, 131, 131);

        applyStudyButton.setEnabled(isEnable);
        jButton2.setEnabled(isEnable);
        jButton3.setEnabled(isEnable);
        makeAnalysisButton.setEnabled(isEnable);
        isFastCheckBox.setEnabled(isEnable);

        applyStudyButton.setForeground(color);
        jButton2.setForeground(color);
        jButton3.setForeground(color);
        makeAnalysisButton.setForeground(color);
        isFastCheckBox.setEnabled(isEnable);

    }

    public void setRedesignButtonToStop(boolean isStop) {
        if (isStop) {
            applyStudyButton.setText("<html><b>STOP!</b></html>");
        } else {
            applyStudyButton.setText("<html><center><b>Redesign<br/>Gene</b></center></html>");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyStudyButton;
    private static javax.swing.JCheckBox isFastCheckBox;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JButton makeAnalysisButton;
    // End of variables declaration//GEN-END:variables
}
