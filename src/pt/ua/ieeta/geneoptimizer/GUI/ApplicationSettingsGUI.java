/*
 * ApplicationSettingsGUI.java
 *
 * Created on 17/Out/2010, 21:16:09
 */

package pt.ua.ieeta.geneoptimizer.GUI;

import pt.ua.ieeta.geneoptimizer.Main.ApplicationSettings;

/**
 *
 * @author Paulo Gaspar
 */
public class ApplicationSettingsGUI extends javax.swing.JFrame {

    private static ApplicationSettingsGUI instance = null;

    public static ApplicationSettingsGUI getInstance()
    {
        if (instance == null)
        {
            /* Initialize GUI components. */
            instance = new ApplicationSettingsGUI();

            /* Load settings from the application settings module. */
            instance.loadSettings();
        }

        return instance;
    }

    /** Creates new form ApplicationSettingsGUI */
    private ApplicationSettingsGUI() {
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        cbGeneAuto = new javax.swing.JCheckBox();
        cbGenomeAuto = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        tfPDBThreshold = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setTitle("EuGene Settings");
        setAlwaysOnTop(true);
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 0));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        cbGeneAuto.setText("Enable Gene auto-discovery");
        cbGeneAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGeneAutoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(cbGeneAuto, gridBagConstraints);

        cbGenomeAuto.setText("Enable Genome auto-discovery");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(cbGenomeAuto, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 400;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        jPanel1.add(jSeparator1, gridBagConstraints);

        tfPDBThreshold.setToolTipText("The minimum percentage of positive amino acid matches to accept and download a PDB structure");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(tfPDBThreshold, gridBagConstraints);

        jLabel1.setText("PDB blast positive-match minimum threshold");
        jLabel1.setToolTipText("The minimum percentage of positive amino acid matches to accept and download a PDB structure");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("NCBI blast minimum identity threshold");
        jLabel2.setToolTipText("When performing an NCBI blast to search for orthologs, this is the minimum identity value to consider the ortholog as the gene itself");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextField2.setToolTipText("When performing an NCBI blast to search for orthologs, this is the minimum identity value to consider the ortholog as the gene itself");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jTextField2, gridBagConstraints);

        jLabel3.setText("Number of housekeeping orthologs for CAI");
        jLabel3.setToolTipText("Minimum number of orthologs for highly expressed genes that is needed to calculate CAI. Note that these genes will be obtained from KEGG, and therefore, the more genes needed, the more time it will take.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jTextField3.setToolTipText("Minimum number of orthologs for highly expressed genes that is needed to calculate CAI. Note that these genes will be obtained from KEGG, and therefore, the more genes needed, the more time it will take.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jTextField3, gridBagConstraints);

        jLabel7.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 4, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel8.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setForeground(new java.awt.Color(0, 0, 255));
        jLabel9.setText("<html><u>?</u></html>");
        jLabel9.setToolTipText("The minimum percentage of positive amino acid matches to accept and download a PDB structure");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setForeground(new java.awt.Color(0, 0, 255));
        jLabel10.setText("<html><u>?</u></html>");
        jLabel10.setToolTipText("When performing an NCBI blast to search for orthologs, this is the minimum identity value to consider the ortholog as the gene itself");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setText("<html><u>?</u></html>");
        jLabel11.setToolTipText("Minimum number of orthologs for highly expressed genes that is needed to calculate CAI. Note that these genes will be obtained from KEGG, and therefore, the more genes needed, the more time it will take.");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        jTabbedPane1.addTab("Auto Discovery", jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("<html>Max simultaneous calls to <b>PDB</b> services</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setText("<html>Max simultaneous calls to <b>Kegg</b> services</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setText("<html>Max simultaneous calls to <b>NCBI</b> services</html>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jLabel6, gridBagConstraints);

        buttonGroup3.add(jRadioButton5);
        jRadioButton5.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jRadioButton5, gridBagConstraints);

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jRadioButton3, gridBagConstraints);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jRadioButton1, gridBagConstraints);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jRadioButton2, gridBagConstraints);

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jRadioButton4, gridBagConstraints);

        buttonGroup3.add(jRadioButton6);
        jRadioButton6.setText("2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jRadioButton6, gridBagConstraints);

        jTabbedPane1.addTab("Advanced", jPanel2);

        getContentPane().add(jTabbedPane1);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        jButton1.setText("OK");
        jButton1.setToolTipText("Save all changes and close window");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        saveSettings();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jLabel9MouseClicked
    {//GEN-HEADEREND:event_jLabel9MouseClicked
        
    }//GEN-LAST:event_jLabel9MouseClicked

    private void cbGeneAutoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbGeneAutoActionPerformed
    {//GEN-HEADEREND:event_cbGeneAutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGeneAutoActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicationSettingsGUI().setVisible(true);
            }
        });
    }
    
    @Override
    public void setVisible(boolean b)
    {
        super.setVisible(b);
        
        if (b)
            loadSettings();
    }

    private void loadSettings() 
    {
        /* Load Auto-Discovery options. */
        cbGeneAuto.setSelected((Boolean) ApplicationSettings.getProperty("geneAutoDiscoveryEnabled", Boolean.class));
        cbGenomeAuto.setSelected((Boolean) ApplicationSettings.getProperty("genomeAutoDiscoveryEnabled", Boolean.class));
        tfPDBThreshold.setText( (String) ApplicationSettings.getProperty("PDBMatchThreshold", String.class));
        jTextField2.setText( (String) ApplicationSettings.getProperty("NCBIMatchThreshold", String.class));
        jTextField3.setText( (String) ApplicationSettings.getProperty("CAIOrthologsThreshold", String.class));
        int PDBSimultaneousCalls = (Integer) ApplicationSettings.getProperty("maxNumberOfPDBBlastSimultaneousCalls", Integer.class);
        if (PDBSimultaneousCalls == 1)
            jRadioButton1.setSelected(true);
        else
            jRadioButton2.setSelected(true);
        int KeggSimultaneousCalls = (Integer) ApplicationSettings.getProperty("maxNumberOfKeggSimultaneousCalls", Integer.class);
        if (KeggSimultaneousCalls == 1)
            jRadioButton3.setSelected(true);
        else
            jRadioButton4.setSelected(true);
        int NCBISimultaneousCalls = (Integer) ApplicationSettings.getProperty("maxNumberOfNCBISimultaneousCalls", Integer.class);
        if (NCBISimultaneousCalls == 1)
            jRadioButton5.setSelected(true);
        else
            jRadioButton6.setSelected(true);
    }
    
    private void saveSettings() 
    {
        /* Save Auto-Discovery options. */
        ApplicationSettings.setProperty("geneAutoDiscoveryEnabled", cbGeneAuto.isSelected(), Boolean.class);
        ApplicationSettings.setProperty("genomeAutoDiscoveryEnabled", cbGenomeAuto.isSelected(), Boolean.class);
        ApplicationSettings.setProperty("PDBMatchThreshold", tfPDBThreshold.getText(), String.class);
        ApplicationSettings.setProperty("NCBIMatchThreshold", jTextField2.getText(), String.class);
        ApplicationSettings.setProperty("CAIOrthologsThreshold", jTextField3.getText(), String.class);
        ApplicationSettings.setProperty("maxNumberOfPDBBlastSimultaneousCalls", jRadioButton1.isSelected()?1:2, Integer.class);
        ApplicationSettings.setProperty("maxNumberOfKeggSimultaneousCalls", jRadioButton3.isSelected()?1:2, Integer.class);
        ApplicationSettings.setProperty("maxNumberOfNCBISimultaneousCalls", jRadioButton5.isSelected()?1:2, Integer.class);
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private static javax.swing.JCheckBox cbGeneAuto;
    private javax.swing.JCheckBox cbGenomeAuto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField tfPDBThreshold;
    // End of variables declaration//GEN-END:variables
}
