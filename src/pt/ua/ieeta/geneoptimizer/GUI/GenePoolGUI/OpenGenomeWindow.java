package pt.ua.ieeta.geneoptimizer.GUI.GenePoolGUI;

import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map.Entry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import pt.ua.ieeta.geneoptimizer.FileHandling.GeneLoader;
import pt.ua.ieeta.geneoptimizer.FileHandling.GeneticCodeTableParser;
import pt.ua.ieeta.geneoptimizer.Main.ApplicationSettings;
import pt.ua.ieeta.geneoptimizer.geneDB.GenomeFilters;

/**
 *
 * @author Paulo Gaspar
 */
public class OpenGenomeWindow extends javax.swing.JDialog {

    private GenomeFilters genomeFilters;

    /**
     * Creates new form OpenGenomeWindow
     */
    public OpenGenomeWindow() {
        super(GenePoolGUI.getInstance());

        initComponents();

        /*
         * Obtain list of available genetic code tables, and add them to the
         * combo box.
         */
        try {
            HashMap<Integer, String> names = GeneticCodeTableParser.getInstance().getGeneticCodeTableNames();
            for (Entry key : names.entrySet()) {
                comboBoxGeneticCode.addItem(new ComboBoxItem((String) key.getValue(),(Integer) key.getKey()));
            }
        } catch (Exception ex) //TODO: exceptions
        {
            Logger.getLogger(GenePoolGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*
         * Mnemonic key for the load button.
         */
        buttonLoadGenomes.setMnemonic(KeyEvent.VK_L);

        /* Set default values for the filters. */
        noStartCodonCB.setSelected((Boolean) ApplicationSettings.getProperty("checkStartCodon", Boolean.class));
        noStopCodonCB.setSelected((Boolean) ApplicationSettings.getProperty("checkStopCodon", Boolean.class));
        noInnerStopCB.setSelected((Boolean) ApplicationSettings.getProperty("checkMiddleStopCodon", Boolean.class));

        genomeFilters = new GenomeFilters((Boolean) ApplicationSettings.getProperty("checkStopCodon", Boolean.class),
                (Boolean) ApplicationSettings.getProperty("checkStartCodon", Boolean.class),
                (Boolean) ApplicationSettings.getProperty("checkMiddleStopCodon", Boolean.class),
                (Boolean) ApplicationSettings.getProperty("checkIsMultipleOfThree", Boolean.class));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxGeneticCode = new javax.swing.JComboBox();
        buttonLoadGenomes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        loadingGenomesLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        noStartCodonCB = new javax.swing.JCheckBox();
        noStopCodonCB = new javax.swing.JCheckBox();
        noInnerStopCB = new javax.swing.JCheckBox();

        setTitle("Select parameters to open genome");
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);

        buttonLoadGenomes.setMnemonic('L');
        buttonLoadGenomes.setText("Open genome");
        buttonLoadGenomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadGenomesActionPerformed(evt);
            }
        });

        jLabel1.setText("Genetic Code:");

        loadingGenomesLabel.setText("Loading genomes");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Ignore a gene if (any):");

        noStartCodonCB.setText("No Start codon");
        noStartCodonCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noStartCodonCBActionPerformed(evt);
            }
        });

        noStopCodonCB.setText("No Stop codon");
        noStopCodonCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noStopCodonCBActionPerformed(evt);
            }
        });

        noInnerStopCB.setText("Inner Stop codon");
        noInnerStopCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noInnerStopCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 29, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noStartCodonCB)
                            .addComponent(noStopCodonCB)
                            .addComponent(noInnerStopCB))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(noStartCodonCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noStopCodonCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noInnerStopCB)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonLoadGenomes))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxGeneticCode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadingGenomesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loadingProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxGeneticCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonLoadGenomes, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadingProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadingGenomesLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonLoadGenomesActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonLoadGenomesActionPerformed
    {//GEN-HEADEREND:event_buttonLoadGenomesActionPerformed
        GeneLoader loadGUI = new GeneLoader(genomeFilters);
        loadGUI.start();
    }//GEN-LAST:event_buttonLoadGenomesActionPerformed

    private void noStartCodonCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_noStartCodonCBActionPerformed
    {//GEN-HEADEREND:event_noStartCodonCBActionPerformed
        ApplicationSettings.setProperty("checkStartCodon", noStartCodonCB.isSelected(), Boolean.class);
        String enabled = noStartCodonCB.isSelected() ? "True" : "False";
        genomeFilters.setNoStartCodon(noStartCodonCB.isSelected());
        System.out.println("  Filter for start codons: " + enabled);
    }//GEN-LAST:event_noStartCodonCBActionPerformed

    private void noStopCodonCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_noStopCodonCBActionPerformed
    {//GEN-HEADEREND:event_noStopCodonCBActionPerformed
        ApplicationSettings.setProperty("checkStopCodon", noStopCodonCB.isSelected(), Boolean.class);
        String enabled = noStopCodonCB.isSelected() ? "True" : "False";
        genomeFilters.setNoStopCodon(noStopCodonCB.isSelected());
        System.out.println("  Filter for stop codons: " + enabled);
    }//GEN-LAST:event_noStopCodonCBActionPerformed

    private void noInnerStopCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_noInnerStopCBActionPerformed
    {//GEN-HEADEREND:event_noInnerStopCBActionPerformed
        ApplicationSettings.setProperty("checkMiddleStopCodon", noInnerStopCB.isSelected(), Boolean.class);
        String enabled = noInnerStopCB.isSelected() ? "True" : "False";
        genomeFilters.setNoMiddleStopCodon(noInnerStopCB.isSelected());
        System.out.println("  Filter for middle stop codons: " + enabled);
    }//GEN-LAST:event_noInnerStopCBActionPerformed

    public int getSelectedCodeTableId() {
        return ((ComboBoxItem) comboBoxGeneticCode.getSelectedItem()).ID;
    }

    public JProgressBar getProgressBar() {
        return loadingProgressBar;
    }

    public JLabel getProgressLabel() {
        return loadingGenomesLabel;
    }

    public JButton getLoadButton() {
        return buttonLoadGenomes;
    }

    private static class ComboBoxItem {

        public String item;
        public int ID;

        public ComboBoxItem(String item, int ID) {
            this.item = item;
            this.ID = ID;
        }

        @Override
        public String toString() {
            return item;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton buttonLoadGenomes;
    private javax.swing.JComboBox comboBoxGeneticCode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel loadingGenomesLabel;
    private final javax.swing.JProgressBar loadingProgressBar = new javax.swing.JProgressBar();
    private static javax.swing.JCheckBox noInnerStopCB;
    private static javax.swing.JCheckBox noStartCodonCB;
    private static javax.swing.JCheckBox noStopCodonCB;
    // End of variables declaration//GEN-END:variables
}
